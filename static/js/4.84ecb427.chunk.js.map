{"version":3,"sources":["containers/Currency/Filter.tsx","containers/Currency/Currency.tsx"],"names":["Filter","updateFilter","useFilter","data-test-id","marginLeft","onChange","e","target","value","STRINGS","FILTER","VIEW_TYPE","map","name","key","CURRENCY","LIST_NUMBER","Currency","useCurrency","currency","currencyType","loadMoreCurrency","viewType","useStorage","bookmark","updateBookmark","bookMark","onClick","onAddClick"],"mappings":"yNAKO,SAASA,IAAU,IAChBC,EAAiBC,cAAjBD,aAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,eAAc,mBACdC,WAAY,OACZC,SAAU,SAACC,GAAD,OACRL,EAAaK,EAAEC,OAAOC,SAGvBC,IAAQC,OAAOC,UAAUC,KAAI,SAACC,GAAD,OAC5B,4BAAQC,IAAG,oBAAeD,GAAQL,MAAOK,GACtCA,OAIP,kBAAC,IAAD,CACEV,eAAc,uBACdC,WAAY,OACZC,SAAU,SAACC,GAAD,OACRL,EAAaK,EAAEC,OAAOC,SAGvBC,IAAQC,OAAOK,SAASH,KAAI,SAACC,GAAD,OAC3B,4BAAQC,IAAG,mBAAcD,GAAQL,MAAOK,GACrCA,OAIP,kBAAC,IAAD,CACEV,eAAc,qBACdC,WAAY,OACZC,SAAU,SAACC,GAAD,OACRL,EAAaK,EAAEC,OAAOC,SAGvBC,IAAQC,OAAOM,YAAYJ,KAAI,SAACC,GAAD,OAC9B,4BAAQC,IAAG,sBAAiBD,GAAQL,MAAOK,GACxCA,Q,YCxCE,SAASI,IAAY,IAAD,EAC8BC,cAAvDC,EADyB,EACzBA,SAAUC,EADe,EACfA,aAAcC,EADC,EACDA,iBAAkBC,EADjB,EACiBA,SADjB,EAEIC,cAA7BC,EAFyB,EAEzBA,SAAUC,EAFe,EAEfA,eAElB,OACE,kBAAC,WAAD,KACE,kBAACzB,EAAD,MACA,kBAAC,IAAD,CACEsB,SAAUA,EACVI,SAAUF,EACVL,SAAUA,EACVC,aAAcA,EACdO,QAASF,EACTG,WAAYP","file":"static/js/4.84ecb427.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\nimport { Select, FiltersWrapper } from './Style';\nimport { STRINGS } from '../../constants';\nimport { useFilter } from '../../hooks';\n\nexport function Filter() {\n  const { updateFilter } = useFilter();\n\n  return (\n    <FiltersWrapper>\n      <Select\n        data-test-id={'select-view-type'}\n        marginLeft={'auto'}\n        onChange={(e: ChangeEvent<HTMLSelectElement>) =>\n          updateFilter(e.target.value)\n        }\n      >\n        {STRINGS.FILTER.VIEW_TYPE.map((name: string) => (\n          <option key={`view-type-${name}`} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n      <Select\n        data-test-id={'select-currency-type'}\n        marginLeft={'40px'}\n        onChange={(e: ChangeEvent<HTMLSelectElement>) =>\n          updateFilter(e.target.value)\n        }\n      >\n        {STRINGS.FILTER.CURRENCY.map((name: string) => (\n          <option key={`currency-${name}`} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n      <Select\n        data-test-id={'select-list-number'}\n        marginLeft={'40px'}\n        onChange={(e: ChangeEvent<HTMLSelectElement>) =>\n          updateFilter(e.target.value)\n        }\n      >\n        {STRINGS.FILTER.LIST_NUMBER.map((name: string) => (\n          <option key={`list-number-${name}`} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n    </FiltersWrapper>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { Filter } from './Filter';\nimport { Table } from '../../components';\nimport { useCurrency, useStorage } from '../../hooks';\n\nexport default function Currency() {\n  const { currency, currencyType, loadMoreCurrency, viewType } = useCurrency();\n  const { bookmark, updateBookmark } = useStorage();\n\n  return (\n    <Fragment>\n      <Filter />\n      <Table\n        viewType={viewType}\n        bookMark={bookmark}\n        currency={currency}\n        currencyType={currencyType}\n        onClick={updateBookmark}\n        onAddClick={loadMoreCurrency}\n      />\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}